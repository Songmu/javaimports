// Code generated by GenerateStdlib.java. DO NOT EDIT.
package com.nikodoko.javaimports.stdlib.internal.api.v8;

import com.google.common.collect.ImmutableMap;
import com.nikodoko.javaimports.parser.Import;
import java.util.Map;

public class Java8StdlibChunk31 {
  static final Map<String, Import[]> CLASSES =
      new ImmutableMap.Builder<String, Import[]>()
          .put(
              "setDatagramSocketImplFactory",
              new Import[] {
                new Import("setDatagramSocketImplFactory", "java.net.DatagramSocket", true),
              })
          .put(
              "FlowStrategy",
              new Import[] {
                new Import("FlowStrategy", "javax.swing.text.FlowView", false),
              })
          .put(
              "ImmutableDescriptor",
              new Import[] {
                new Import("ImmutableDescriptor", "javax.management", false),
              })
          .put(
              "SUPERSCRIPT_SUPER",
              new Import[] {
                new Import("SUPERSCRIPT_SUPER", "java.awt.font.TextAttribute", true),
              })
          .put(
              "NO_MORE_EVENTS",
              new Import[] {
                new Import("NO_MORE_EVENTS", "javax.print.event.PrintJobEvent", true),
              })
          .put(
              "XmlTransient",
              new Import[] {
                new Import("XmlTransient", "javax.xml.bind.annotation", false),
              })
          .put(
              "selectionBeginAction",
              new Import[] {
                new Import("selectionBeginAction", "javax.swing.text.DefaultEditorKit", true),
              })
          .put(
              "Engineering",
              new Import[] {
                new Import("Engineering", "javax.print.attribute.standard.MediaSize", false),
              })
          .put(
              "DynAnyFactoryHelper",
              new Import[] {
                new Import("DynAnyFactoryHelper", "org.omg.DynamicAny", false),
              })
          .put(
              "newAudioClip",
              new Import[] {
                new Import("newAudioClip", "java.applet.Applet", true),
              })
          .put(
              "TEXT_NODE",
              new Import[] {
                new Import("TEXT_NODE", "org.w3c.dom.Node", true),
              })
          .put(
              "ACTION_NONE",
              new Import[] {
                new Import("ACTION_NONE", "java.awt.dnd.DnDConstants", true),
              })
          .put(
              "_tk_longdouble",
              new Import[] {
                new Import("_tk_longdouble", "org.omg.CORBA.TCKind", true),
              })
          .put(
              "XMLReader",
              new Import[] {
                new Import("XMLReader", "org.xml.sax", false),
              })
          .put(
              "DATE_FIELD",
              new Import[] {
                new Import("DATE_FIELD", "java.text.DateFormat", true),
              })
          .put(
              "endLineAction",
              new Import[] {
                new Import("endLineAction", "javax.swing.text.DefaultEditorKit", true),
              })
          .put(
              "ConcurrentSkipListSet",
              new Import[] {
                new Import("ConcurrentSkipListSet", "java.util.concurrent", false),
              })
          .put(
              "NoType",
              new Import[] {
                new Import("NoType", "javax.lang.model.type", false),
              })
          .put(
              "getTabbedTextWidth",
              new Import[] {
                new Import("getTabbedTextWidth", "javax.swing.text.Utilities", true),
              })
          .put(
              "_dk_Struct",
              new Import[] {
                new Import("_dk_Struct", "org.omg.CORBA.DefinitionKind", true),
              })
          .put(
              "Exception",
              new Import[] {
                new Import("Exception", "java.lang", false),
              })
          .put(
              "BigDecimal",
              new Import[] {
                new Import("BigDecimal", "java.math", false),
              })
          .put(
              "userNodeForPackage",
              new Import[] {
                new Import("userNodeForPackage", "java.util.prefs.Preferences", true),
              })
          .put(
              "EXPANDABLE",
              new Import[] {
                new Import("EXPANDABLE", "javax.accessibility.AccessibleState", true),
              })
          .put(
              "ShortMessage",
              new Import[] {
                new Import("ShortMessage", "javax.sound.midi", false),
              })
          .put(
              "SrcAtop",
              new Import[] {
                new Import("SrcAtop", "java.awt.AlphaComposite", true),
              })
          .put(
              "MAX_KEY_LENGTH",
              new Import[] {
                new Import("MAX_KEY_LENGTH", "java.util.prefs.Preferences", true),
              })
          .put(
              "PrintJobAdapter",
              new Import[] {
                new Import("PrintJobAdapter", "javax.print.event", false),
              })
          .put(
              "ROOT_PANE_PROPERTY",
              new Import[] {
                new Import("ROOT_PANE_PROPERTY", "javax.swing.JInternalFrame", true),
              })
          .put(
              "ACCEPTING_JOBS",
              new Import[] {
                new Import(
                    "ACCEPTING_JOBS",
                    "javax.print.attribute.standard.PrinterIsAcceptingJobs",
                    true),
              })
          .put(
              "NULL_ATTRIBUTE_VALUE",
              new Import[] {
                new Import("NULL_ATTRIBUTE_VALUE", "javax.swing.text.html.HTML", true),
              })
          .put(
              "icICCAbsoluteColorimetric",
              new Import[] {
                new Import("icICCAbsoluteColorimetric", "java.awt.color.ICC_Profile", true),
              })
          .build();
}
